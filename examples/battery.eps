%!PS-Adobe-2.0 EPSF-2.0
%%Title: battery.eps
%%Creator: gnuplot 4.6 patchlevel 1
%%CreationDate: Tue May 21 17:00:30 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (battery.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 1)
  /Author (eric)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue May 21 17:00:30 2013)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
/Helvetica findfont 140 scalefont setfont
/Helvetica findfont 140 scalefont setfont
/Helvetica findfont 140 scalefont setfont
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
686 448 M
63 0 V
/Times-Roman findfont 250 scalefont setfont
-147 0 R
( 100) Rshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
686 1001 M
63 0 V
/Times-Roman findfont 250 scalefont setfont
-147 0 R
( 150) Rshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
686 1554 M
63 0 V
/Times-Roman findfont 250 scalefont setfont
-147 0 R
( 200) Rshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
686 2107 M
63 0 V
/Times-Roman findfont 250 scalefont setfont
-147 0 R
( 250) Rshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
686 2659 M
63 0 V
/Times-Roman findfont 250 scalefont setfont
-147 0 R
( 300) Rshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
686 3212 M
63 0 V
/Times-Roman findfont 250 scalefont setfont
-147 0 R
( 350) Rshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
686 3765 M
63 0 V
/Times-Roman findfont 250 scalefont setfont
-147 0 R
( 400) Rshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
686 4318 M
63 0 V
/Times-Roman findfont 250 scalefont setfont
-147 0 R
( 450) Rshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
686 4871 M
63 0 V
/Times-Roman findfont 250 scalefont setfont
-147 0 R
( 500) Rshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
686 448 M
0 63 V
/Times-Roman findfont 250 scalefont setfont
0 -203 R
( 9000) Cshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
1469 448 M
0 63 V
/Times-Roman findfont 250 scalefont setfont
0 -203 R
( 9500) Cshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
2251 448 M
0 63 V
/Times-Roman findfont 250 scalefont setfont
0 -203 R
( 10000) Cshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
3034 448 M
0 63 V
/Times-Roman findfont 250 scalefont setfont
0 -203 R
( 10500) Cshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
3817 448 M
0 63 V
/Times-Roman findfont 250 scalefont setfont
0 -203 R
( 11000) Cshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
4599 448 M
0 63 V
/Times-Roman findfont 250 scalefont setfont
0 -203 R
( 11500) Cshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
5382 448 M
0 63 V
/Times-Roman findfont 250 scalefont setfont
0 -203 R
( 12000) Cshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
6164 448 M
0 63 V
/Times-Roman findfont 250 scalefont setfont
0 -203 R
( 12500) Cshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
6947 448 M
0 63 V
/Times-Roman findfont 250 scalefont setfont
0 -203 R
( 13000) Cshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTb
686 4871 M
686 448 L
6261 0 V
0 4423 R
-6261 0 R
stroke
LCb setrgbcolor
/Times-Roman findfont 250 scalefont setfont
112 2659 M
currentpoint gsave translate -270 rotate 0 0 M
(Battery Left) Cshow
grestore
/Helvetica findfont 140 scalefont setfont
LTb
LCb setrgbcolor
/Times-Roman findfont 250 scalefont setfont
3816 98 M
(Time\(s\)) Cshow
/Helvetica findfont 140 scalefont setfont
LTb
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UP
2.000 UL
LT0
LC0 setrgbcolor
/Helvetica findfont 140 scalefont setfont
LCb setrgbcolor
6296 4738 M
('battery.dat' every 60 using 1:2) Rshow
LT0
LC0 setrgbcolor
6380 4738 M
399 0 V
686 1999 M
94 162 V
94 -246 V
94 291 V
94 -337 V
94 346 V
93 -718 V
94 736 V
94 -394 V
94 -4 V
94 82 V
94 -82 V
94 338 V
94 -33 V
94 -46 V
94 -122 V
94 -11 V
94 -272 V
93 -217 V
94 267 V
94 -84 V
94 -182 V
94 121 V
94 -113 V
94 205 V
94 -364 V
94 208 V
94 -114 V
94 228 V
94 -165 V
93 -37 V
94 9 V
94 403 V
94 -486 V
94 432 V
94 -46 V
94 -178 V
94 171 V
94 -67 V
94 -277 V
94 69 V
94 281 V
93 -63 V
94 -282 V
94 67 V
94 183 V
94 -44 V
94 139 V
94 -106 V
94 47 V
94 -293 V
94 80 V
94 -55 V
93 72 V
94 -45 V
94 299 V
94 -247 V
94 214 V
94 -21 V
94 45 V
94 83 V
94 -101 V
94 -274 V
94 66 V
94 -140 V
93 151 V
94 44 V
63 -67 V
686 1999 BoxF
780 2161 BoxF
874 1915 BoxF
968 2206 BoxF
1062 1869 BoxF
1156 2215 BoxF
1249 1497 BoxF
1343 2233 BoxF
1437 1839 BoxF
1531 1835 BoxF
1625 1917 BoxF
1719 1835 BoxF
1813 2173 BoxF
1907 2140 BoxF
2001 2094 BoxF
2095 1972 BoxF
2189 1961 BoxF
2283 1689 BoxF
2376 1472 BoxF
2470 1739 BoxF
2564 1655 BoxF
2658 1473 BoxF
2752 1594 BoxF
2846 1481 BoxF
2940 1686 BoxF
3034 1322 BoxF
3128 1530 BoxF
3222 1416 BoxF
3316 1644 BoxF
3410 1479 BoxF
3503 1442 BoxF
3597 1451 BoxF
3691 1854 BoxF
3785 1368 BoxF
3879 1800 BoxF
3973 1754 BoxF
4067 1576 BoxF
4161 1747 BoxF
4255 1680 BoxF
4349 1403 BoxF
4443 1472 BoxF
4537 1753 BoxF
4630 1690 BoxF
4724 1408 BoxF
4818 1475 BoxF
4912 1658 BoxF
5006 1614 BoxF
5100 1753 BoxF
5194 1647 BoxF
5288 1694 BoxF
5382 1401 BoxF
5476 1481 BoxF
5570 1426 BoxF
5663 1498 BoxF
5757 1453 BoxF
5851 1752 BoxF
5945 1505 BoxF
6039 1719 BoxF
6133 1698 BoxF
6227 1743 BoxF
6321 1826 BoxF
6415 1725 BoxF
6509 1451 BoxF
6603 1517 BoxF
6697 1377 BoxF
6790 1528 BoxF
6884 1572 BoxF
6579 4738 BoxF
% End plot #1
% Begin plot #2
10.000 UL
LTa
LC0 setrgbcolor
/Helvetica findfont 140 scalefont setfont
LCb setrgbcolor
6296 4598 M
('battery.dat' every 60 using 1:2) Rshow
LTa
LC0 setrgbcolor
6380 4598 M
399 0 V
686 1847 M
929 -25 V
2980 1677 L
1365 -78 V
1365 -11 V
1237 -5 V
% End plot #2
% Begin plot #3
1.000 UP
stroke
2.000 UL
LT1
LC2 setrgbcolor
/Helvetica findfont 140 scalefont setfont
LCb setrgbcolor
6296 4458 M
('battery.dat' every 60 using 1:3) Rshow
LT1
LC2 setrgbcolor
6380 4458 M
399 0 V
686 2151 M
94 -22 V
94 -626 V
94 477 V
94 170 V
94 -207 V
93 -163 V
94 -14 V
94 168 V
94 -420 V
94 281 V
94 253 V
94 -178 V
94 275 V
94 -6 V
94 -427 V
94 98 V
94 111 V
93 -13 V
94 234 V
94 -212 V
94 -141 V
94 332 V
94 -170 V
94 -265 V
94 216 V
94 326 V
94 -355 V
94 286 V
94 56 V
93 112 V
94 -555 V
94 418 V
94 -670 V
94 86 V
94 553 V
94 -175 V
94 39 V
94 -369 V
94 65 V
94 494 V
94 -644 V
93 96 V
94 443 V
94 -300 V
94 -108 V
94 225 V
94 205 V
94 -66 V
94 -38 V
94 -7 V
94 43 V
94 -409 V
93 325 V
94 -127 V
94 84 V
94 -145 V
94 114 V
94 49 V
94 -489 V
94 192 V
94 213 V
94 448 V
94 -845 V
94 247 V
93 181 V
94 265 V
63 -118 V
686 2151 Star
780 2129 Star
874 1503 Star
968 1980 Star
1062 2150 Star
1156 1943 Star
1249 1780 Star
1343 1766 Star
1437 1934 Star
1531 1514 Star
1625 1795 Star
1719 2048 Star
1813 1870 Star
1907 2145 Star
2001 2139 Star
2095 1712 Star
2189 1810 Star
2283 1921 Star
2376 1908 Star
2470 2142 Star
2564 1930 Star
2658 1789 Star
2752 2121 Star
2846 1951 Star
2940 1686 Star
3034 1902 Star
3128 2228 Star
3222 1873 Star
3316 2159 Star
3410 2215 Star
3503 2327 Star
3597 1772 Star
3691 2190 Star
3785 1520 Star
3879 1606 Star
3973 2159 Star
4067 1984 Star
4161 2023 Star
4255 1654 Star
4349 1719 Star
4443 2213 Star
4537 1569 Star
4630 1665 Star
4724 2108 Star
4818 1808 Star
4912 1700 Star
5006 1925 Star
5100 2130 Star
5194 2064 Star
5288 2026 Star
5382 2019 Star
5476 2062 Star
5570 1653 Star
5663 1978 Star
5757 1851 Star
5851 1935 Star
5945 1790 Star
6039 1904 Star
6133 1953 Star
6227 1464 Star
6321 1656 Star
6415 1869 Star
6509 2317 Star
6603 1472 Star
6697 1719 Star
6790 1900 Star
6884 2165 Star
6579 4458 Star
% End plot #3
% Begin plot #4
10.000 UL
LTa
LC2 setrgbcolor
/Helvetica findfont 140 scalefont setfont
LCb setrgbcolor
6296 4318 M
('battery.dat' every 60 using 1:3) Rshow
LTa
LC2 setrgbcolor
6380 4318 M
399 0 V
686 1902 M
929 9 V
1365 23 V
1365 -17 V
1365 -24 V
1237 -12 V
% End plot #4
stroke
1.000 UL
LTb
686 4871 M
686 448 L
6261 0 V
0 4423 R
-6261 0 R
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman Helvetica
